---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import { ViewTransitions } from "astro:transitions";
import { getCollection } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";
const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);
---

<!doctype html>
<html lang="en">
  <head>
    <ViewTransitions />
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body class="p-4 md:px-8 md:py-4 space-y-12 max-w-7xl mx-auto">
    <Header />
    <section class="mx-auto border-y border-black py-4 space-y-4">
      <div class="space-y-3">
        <span
          class="font-medium border rounded-full border-black px-2.5 py-1 text-[10px]"
          >Programming blog</span
        >
        <h1 class="text-4xl font-bold text-left">Untitled Blog</h1>
      </div>
      <p class="text-gray-800 text-sm text-right font-medium">
        New product features, the latest in technology, solutions, and updates.
      </p>
    </section>
    <section class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {
        posts.map((post, index) => (
          <a
            href={`/blog/${post.slug}/`}
            class={`group ${index === 0 ? "md:col-span-2 lg:col-span-3" : ""}`}
          >
            <article
              class={`border-y border-black p-3 rounded-sm overflow-hidden shadow-sm hover:shadow-md transition-shadow duration-300 ${index === 0 ? "md:grid md:grid-cols-2 md:gap-6" : ""}`}
            >
              <img
                src={post.data.heroImage}
                alt={post.data.title}
                class={`w-full object-cover ${index === 0 ? "md:h-full" : "h-48"}`}
              />
              <div class="p-4 space-y-2">
                <h2
                  class={`font-semibold transition-colors duration-300 ${index === 0 ? "text-3xl" : "text-xl"}`}
                >
                  {post.data.title}
                </h2>
                <p class="text-sm text-gray-600">
                  <FormattedDate date={post.data.pubDate} />
                </p>
                <p
                  class={`text-gray-700 ${index === 0 ? "text-base" : "text-sm line-clamp-2"}`}
                >
                  {post.data.description}
                </p>
                <div class="flex flex-wrap gap-2 pt-2">
                  {post.data.keywords.map((keyword) => (
                    <span class="text-xs bg-gray-100 text-gray-800 px-2 py-1 rounded-full">
                      {keyword}
                    </span>
                  ))}
                </div>
              </div>
            </article>
          </a>
        ))
      }
    </section>
    <Footer />
  </body>
</html>
